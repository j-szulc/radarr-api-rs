/*
 * Radarr
 *
 * Radarr API docs
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct MovieFileListResource {
    #[serde(rename = "movieFileIds", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub movie_file_ids: Option<Option<Vec<i32>>>,
    #[serde(rename = "languages", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub languages: Option<Option<Vec<crate::models::Language>>>,
    #[serde(rename = "quality", skip_serializing_if = "Option::is_none")]
    pub quality: Option<Box<crate::models::QualityModel>>,
    #[serde(rename = "edition", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub edition: Option<Option<String>>,
    #[serde(rename = "releaseGroup", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub release_group: Option<Option<String>>,
    #[serde(rename = "sceneName", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub scene_name: Option<Option<String>>,
    #[serde(rename = "indexerFlags", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub indexer_flags: Option<Option<i32>>,
}

impl MovieFileListResource {
    pub fn new() -> MovieFileListResource {
        MovieFileListResource {
            movie_file_ids: None,
            languages: None,
            quality: None,
            edition: None,
            release_group: None,
            scene_name: None,
            indexer_flags: None,
        }
    }
}


