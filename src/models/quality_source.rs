/*
 * Radarr
 *
 * Radarr API docs
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */


/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum QualitySource {
    #[serde(rename = "unknown")]
    Unknown,
    #[serde(rename = "cam")]
    Cam,
    #[serde(rename = "telesync")]
    Telesync,
    #[serde(rename = "telecine")]
    Telecine,
    #[serde(rename = "workprint")]
    Workprint,
    #[serde(rename = "dvd")]
    Dvd,
    #[serde(rename = "tv")]
    Tv,
    #[serde(rename = "webdl")]
    Webdl,
    #[serde(rename = "webrip")]
    Webrip,
    #[serde(rename = "bluray")]
    Bluray,

}

impl ToString for QualitySource {
    fn to_string(&self) -> String {
        match self {
            Self::Unknown => String::from("unknown"),
            Self::Cam => String::from("cam"),
            Self::Telesync => String::from("telesync"),
            Self::Telecine => String::from("telecine"),
            Self::Workprint => String::from("workprint"),
            Self::Dvd => String::from("dvd"),
            Self::Tv => String::from("tv"),
            Self::Webdl => String::from("webdl"),
            Self::Webrip => String::from("webrip"),
            Self::Bluray => String::from("bluray"),
        }
    }
}

impl Default for QualitySource {
    fn default() -> QualitySource {
        Self::Unknown
    }
}




