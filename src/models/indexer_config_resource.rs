/*
 * Radarr
 *
 * Radarr API docs
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IndexerConfigResource {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "minimumAge", skip_serializing_if = "Option::is_none")]
    pub minimum_age: Option<i32>,
    #[serde(rename = "maximumSize", skip_serializing_if = "Option::is_none")]
    pub maximum_size: Option<i32>,
    #[serde(rename = "retention", skip_serializing_if = "Option::is_none")]
    pub retention: Option<i32>,
    #[serde(rename = "rssSyncInterval", skip_serializing_if = "Option::is_none")]
    pub rss_sync_interval: Option<i32>,
    #[serde(rename = "preferIndexerFlags", skip_serializing_if = "Option::is_none")]
    pub prefer_indexer_flags: Option<bool>,
    #[serde(rename = "availabilityDelay", skip_serializing_if = "Option::is_none")]
    pub availability_delay: Option<i32>,
    #[serde(rename = "allowHardcodedSubs", skip_serializing_if = "Option::is_none")]
    pub allow_hardcoded_subs: Option<bool>,
    #[serde(rename = "whitelistedHardcodedSubs", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub whitelisted_hardcoded_subs: Option<Option<String>>,
}

impl IndexerConfigResource {
    pub fn new() -> IndexerConfigResource {
        IndexerConfigResource {
            id: None,
            minimum_age: None,
            maximum_size: None,
            retention: None,
            rss_sync_interval: None,
            prefer_indexer_flags: None,
            availability_delay: None,
            allow_hardcoded_subs: None,
            whitelisted_hardcoded_subs: None,
        }
    }
}


