/*
 * Radarr
 *
 * Radarr API docs
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct QualityDefinitionResource {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "quality", skip_serializing_if = "Option::is_none")]
    pub quality: Option<Box<crate::models::Quality>>,
    #[serde(rename = "title", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub title: Option<Option<String>>,
    #[serde(rename = "weight", skip_serializing_if = "Option::is_none")]
    pub weight: Option<i32>,
    #[serde(rename = "minSize", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub min_size: Option<Option<f64>>,
    #[serde(rename = "maxSize", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub max_size: Option<Option<f64>>,
    #[serde(rename = "preferredSize", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub preferred_size: Option<Option<f64>>,
}

impl QualityDefinitionResource {
    pub fn new() -> QualityDefinitionResource {
        QualityDefinitionResource {
            id: None,
            quality: None,
            title: None,
            weight: None,
            min_size: None,
            max_size: None,
            preferred_size: None,
        }
    }
}


