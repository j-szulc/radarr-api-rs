/*
 * Radarr
 *
 * Radarr API docs
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */


/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TmdbCountryCode {
    #[serde(rename = "au")]
    Au,
    #[serde(rename = "br")]
    Br,
    #[serde(rename = "ca")]
    Ca,
    #[serde(rename = "fr")]
    Fr,
    #[serde(rename = "de")]
    De,
    #[serde(rename = "gb")]
    Gb,
    #[serde(rename = "ie")]
    Ie,
    #[serde(rename = "it")]
    It,
    #[serde(rename = "es")]
    Es,
    #[serde(rename = "us")]
    Us,
    #[serde(rename = "nz")]
    Nz,

}

impl ToString for TmdbCountryCode {
    fn to_string(&self) -> String {
        match self {
            Self::Au => String::from("au"),
            Self::Br => String::from("br"),
            Self::Ca => String::from("ca"),
            Self::Fr => String::from("fr"),
            Self::De => String::from("de"),
            Self::Gb => String::from("gb"),
            Self::Ie => String::from("ie"),
            Self::It => String::from("it"),
            Self::Es => String::from("es"),
            Self::Us => String::from("us"),
            Self::Nz => String::from("nz"),
        }
    }
}

impl Default for TmdbCountryCode {
    fn default() -> TmdbCountryCode {
        Self::Au
    }
}




